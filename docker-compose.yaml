version: '3.2'
services:
  db:
   image: ganjaaa/mariadb:10.3
   restart: always
   env_file:
     - ./.env
   volumes:
     - type: bind
       source: ./db-data/dadidb
       target: /var/lib/mysql

  adminer:
    image: adminer
    restart: always
    environment:
      - VIRTUAL_HOST=adminer.dnd
    depends_on:
      - db

  nginx:
    image: nginx:1.15-alpine
    restart: always
    read_only: true
    expose:
      - 8080
    environment:
      - VIRTUAL_HOST=dungeon.dnd
      - VIRTUAL_PORT=8080
    volumes:
      - type: volume
        read_only: true
        source: html-data
        target: /var/www/html
        volume:
          nocopy: true
      - type: bind
        source: ./www-data/upload/
        target: /var/www/html/webroot/inc/items/
        volume:
          nocopy: true
      - type: bind
        source: ./nginx/default.conf
        target: /etc/nginx/conf.d/default.conf
      - type: volume
        source: nginx
        target: /var/cache/nginx
      - type: volume
        source: nginx
        target: /var/run
    depends_on:
      - dadi
      - frontend

  dadi:
    build: .
    image: dadi:fpm
    restart: always
    env_file:
      - ./.env
    volumes:
      - type: volume
        source: html-data
        target: /var/www/html
      - type: bind
        source: ./www-data/upload/
        target: /var/www/html/webroot/inc/items/
        volume:
          nocopy: true
      - "./htdocs/lib:/var/www/html/lib"
      - "./htdocs/bin:/var/www/html/bin"
      - "./htdocs/webroot:/var/www/html/webroot"
      - "./htdocs/templates:/var/www/html/templates"
    depends_on:
      - db

  hackmd:
    image: hackmdio/hackmd:1.3-alpine
    restart: always
    ports:
      - 3000:3000
    environment:
      - VIRTUAL_HOST=book.dnd
      - CMD_DB_URL=mysql://hackmd:hackmdpass@db:3306/hackmd
      - CMD_SESSION_SECRET=R4ND0M$T71N5
      - CMD_ALLOW_FREEURL=true
    depends_on:
      - db

  frontend:
    image: dadi:frontend
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-React
    ports:
      - 3001:3000
    volumes:
      - "./frontend/src:/usr/src/app/src"

  proxy:
    image: jwilder/nginx-proxy:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro 
      - ./nginx/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro
    depends_on:
      - hackmd
      - dadi
      - adminer

volumes:
  html-data:
  nginx:
